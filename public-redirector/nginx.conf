worker_processes  1;
events {
    worker_connections  1024;
}

http {
server {
    include       mime.types;
    default_type  application/octet-stream;
    root /opt/app-root/src/html;
    autoindex on;
    sendfile on;
    listen 8080;

    # shout out https://stackoverflow.com/a/25330027
    # force nginx to use Server Name Indentification (SNI)
    proxy_ssl_server_name on;

    # We used to have a spurious html/ - let's be backwards compatible.
    rewrite ^/html(.*)$ /$1 break;

    # This is the ART s3 bucket.
    # For metadata (JSON) we proxy rather
    # than redirect, to help avoid the URI leaking. However, for the
    # qcow2 (and in the future other images) we do a HTTP redirect, to avoid
    # serving significant traffic from the redirector.
    rewrite ^/art/storage/(.*\.qcow2.*) https://art-rhcos-ci.s3.amazonaws.com/$1 redirect;
    location /art/storage {
         rewrite    /art/storage/(.*) /$1 break;
         proxy_pass https://art-rhcos-ci.s3.amazonaws.com;
    }

    # This is the RHCOS devel pipeline.
    # The CloudFront URI was provisioned by walters; it may change. We don't
    # want people referencing it directly. For metadata (JSON) we proxy rather
    # than redirect, to help avoid the CloudFront URI leaking. However, for the
    # qcow2 (and in the future other images) we do a HTTP redirect, to avoid
    # serving significant traffic from the redirector.
    rewrite ^/storage/(.*\.qcow2.*) https://d26v6vn1y7q7fv.cloudfront.net/$1 redirect;
    location /storage {
         rewrite    /storage/(.*) /$1 break;
         proxy_pass https://d26v6vn1y7q7fv.cloudfront.net/;
    }
}
}
